<?php
/**
 * DebugPrinter.php
 *
 * @package Utility
 *
 * @author Chris Rog <crog@gustavus.edu>
 */
namespace Gustavus\Utility;



/**
 * The DebugPrinter interface defines standard methods for objects which need explicit control over
 * how they are dumped while debugging.
 *
 * Classes implementing this interface will be fully responsible for how they are output when dumped
 * using the Debug::dump function.
 *
 * @package Utility
 *
 * @author Chris Rog <crog@gustavus.edu>
 */
interface DebugPrinter
{
  /**
   * Called when an object implementing this interface has been dumped using Debug::dump or its
   * derivatives.
   *
   * @param integer $indent
   *  The current indentation depth. All lines generated by this DebugPrinter should be indented by,
   *  at least, this number of spaces.
   *
   * @param integer $maxdepth
   *  The maximum number of levels this method should traverse in cases where it is recursively
   *  called. If this parameter is negative, no limit should be imposed.
   *
   * @return string
   *  The debug output for this object.
   */
  public function generateDebugOutput($indent, $maxdepth);

}
